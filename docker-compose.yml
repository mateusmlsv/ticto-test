version: "3.1"

services:
  nginx:
    image: nginx:1.19
    container_name: ticto_nginx
    volumes:
      - ./www:/var/www
      - ./docker-config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker-config/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker-config/nginx/ssl/server-key.pem:/etc/nginx/ssl/server-key.pem
      - ./docker-config/nginx/ssl/server.pem:/etc/nginx/ssl/server.pem
      - ./docker-data/nginx/logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      - php
    networks:
      - tictodb

  mysql:
    image: mysql:8.0
    container_name: ticto_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=point_control_system
      - MYSQL_USER=ticto
      - MYSQL_PASSWORD=ticto
    volumes:
      - ./docker-data/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - tictodb

  redis:
    image: redis:latest
    container_name: ticto_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - "./docker-data/redis:/data"
    networks:
      - tictodb

  php:
    image: php8-fpm
    build:
      context: ./docker-config/php
      dockerfile: Dockerfile
    container_name: ticto_php
    volumes:
      - ./www:/var/www
      - ./docker-config/php/conf.d:/usr/local/etc/php/conf.d
    links:
        - mysql
    ports:
      - "9000"
    restart: unless-stopped
    working_dir: /var/www
    depends_on:
      - mysql
    networks:
      - tictodb

networks:
  tictodb:
    driver: bridge
